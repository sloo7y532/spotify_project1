// import React, { useState } from "react";
// import { createUserWithEmailAndPassword } from "firebase/auth";
// import { auth } from "../firebase/firebase"; // ุชุฃูุฏ ูู ุงููุณุงุฑ ุงูุตุญูุญ ูููู firebase.ts
// import { useAppDispatch, useAppSelector } from "../store/hooks.ts"; // ุชุฃูุฏ ูู ุงููุณุงุฑ ุงูุตุญูุญ
// import { signupStart, signupSuccess, signupFailure, clearError } from "../store/slices/authSlice.ts"; // ุชุฃูุฏ ูู ุงููุณุงุฑ ุงูุตุญูุญ
// import '../styles/signup.css'; // ุณููุดุฆ ูุฐุง ุงูููู ูุชูุณููุงุชูุง

// // ุดุนุงุฑ Spotify (ูููู ุฃู ูููู ูููู SVG ุฃู ูุฌุฑุฏ ุตูุฑุฉ)
// const SpotifyLogo = () => (
//   // ููููู ุงุณุชุจุฏุงู ูุฐุง ุจุฑุงุจุท ุฃู ูููู SVG ูุดุนุงุฑ ุณุจูุชููุงู
//   <img src="https://www.scdn.co/i/spotify-logo-primary-green.svg" alt="Spotify Logo" className="spotify-logo" />
// );

// const SignupPage = () => {
//   const [email, setEmail] = useState("");
//   const [password, setPassword] = useState("");
//   const [name, setName] = useState(""); // ุฌุฏูุฏ ูุฎุทูุฉ 2
//   const [day, setDay] = useState(""); // ุฌุฏูุฏ ูุฎุทูุฉ 2
//   const [month, setMonth] = useState(""); // ุฌุฏูุฏ ูุฎุทูุฉ 2
//   const [year, setYear] = useState(""); // ุฌุฏูุฏ ูุฎุทูุฉ 2
//   const [gender, setGender] = useState(""); // ุฌุฏูุฏ ูุฎุทูุฉ 2
//   const [showPassword, setShowPassword] = useState(false); // ุฌุฏูุฏ ูุฎุทูุฉ 1

//   const [currentStep, setCurrentStep] = useState(0); // 0: ุดุงุดุฉ ุงูุจุฏุก, 1: ูููุฉ ุงููุฑูุฑ, 2: ุงูุจูุงูุงุช ุงูุดุฎุตูุฉ, 3: ุงูุดุฑูุท

//   const dispatch = useAppDispatch();
//   const { loading, error } = useAppSelector((state) => state.auth);

//   const handleNextStep = () => {
//     setCurrentStep((prevStep) => prevStep + 1);
//   };

//   const handlePreviousStep = () => {
//     setCurrentStep((prevStep) => prevStep - 1);
//     dispatch(clearError()); // ูุณุญ ุงูุฃุฎุทุงุก ุนูุฏ ุงูุนูุฏุฉ ููุฎูู
//   };

//   const handleSignup = async (e: React.FormEvent) => {
//     e.preventDefault();
//     dispatch(signupStart());
//     try {
//       const userCredential = await createUserWithEmailAndPassword(auth, email, password);
//       const user = userCredential.user;
//       const token = await user.getIdToken();

//       // ููุง ููููู ุฃูุถูุง ุชุญุฏูุซ ููู ุชุนุฑูู ุงููุณุชุฎุฏู ูู Firebase ูุฅุถุงูุฉ ุงูุงุณู ูุชุงุฑูุฎ ุงููููุงุฏ ูุงูููุน
//       // ูุซุงู: await updateProfile(user, { displayName: name });
//       // ุฃู ุญูุธูุง ูู ูุงุนุฏุฉ ุจูุงูุงุชู (ูุซู Firestore ุฃู Realtime Database)

//       dispatch(
//         signupSuccess({
//           id: user.uid,
//           email: user.email,
//           token,
//         })
//       );
//       // ุจุนุฏ ุงููุฌุงุญุ ููููู ุชูุฌูู ุงููุณุชุฎุฏู ุฅูู ููุญุฉ ุงูุชุญูู ุฃู ุตูุญุฉ ุงูุชุฑุญูุจ
//       // ูุซุงู: navigate('/dashboard'); // ุณุชุญุชุงุฌ ุฅูู ุงุณุชุฎุฏุงู react-router-dom for this
//     } catch (err: any) {
//       dispatch(signupFailure(err.message));
//     }
//   };

//   const renderCurrentStep = () => {
//     switch (currentStep) {
//       case 0:
//         return (
//           <div className="signup-step-container">
//             <h1 className="signup-title">ุณุฌูู ุงูุงุดุชุฑุงู <br /> ูุจุฏุก ุงูุงุณุชูุงุน</h1>
//             <div className="input-group">
//               <label htmlFor="email" className="input-label">ุนููุงู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู</label>
//               <input
//                 id="email"
//                 type="email"
//                 placeholder="name@domain.com"
//                 value={email}
//                 onChange={(e) => setEmail(e.target.value)}
//                 className="signup-input"
//               />
//               <a href="#" className="alternative-link">ุงุณุชุฎุฏุงู ุฑูู ุงููุงุชู ุจุฏูุงู ูู ุฐูู</a>
//             </div>
//             <button className="signup-button primary-button" onClick={handleNextStep}>
//               ุงูุชุงูู
//             </button>
//             <div className="or-divider">
//               <span className="or-text">ุฃู</span>
//             </div>
//             <button className="signup-button social-button google-button">
//               <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/c/c1/Google_%22G%22_logo.svg/768px-Google_%22G%22_logo.svg.png" alt="Google" className="social-icon" />
//               ุชุณุฌูู ุงูุงุดุชุฑุงู ูู ุฎูุงู Google
//             </button>
//             <button className="signup-button social-button facebook-button">
//               <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/2021_Facebook_icon.svg/2048px-2021_Facebook_icon.svg.png" alt="Facebook" className="social-icon" />
//               ุงูุชุณุฌูู ุจุงุณุชุฎุฏุงู Facebook
//             </button>
//             <button className="signup-button social-button apple-button">
//               <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/Apple_logo_black.svg/1667px-Apple_logo_black.svg.png" alt="Apple" className="social-icon" />
//               ุชุณุฌูู ุงูุงุดุชุฑุงู ุจุงุณุชุฎุฏุงู Apple
//             </button>
//             <div className="login-prompt">
//               <p>ูู ูุฏูู ุญุณุงุจ ุญุงูููุงุ <a href="#" className="login-link">ุณุฌูู ุงูุฏุฎูู ููุง</a></p>
//             </div>
//           </div>
//         );

//       case 1:
//         return (
//           <div className="signup-step-container">
//             <div className="step-header">
//               <div className="progress-bar">
//                 <div className="progress-fill" style={{ width: '33%' }}></div>
//               </div>
//               <p className="step-indicator">ุงูุฎุทูุฉ 1 ูู 3</p>
//               {/* <span className="arrow-icon" onClick={handlePreviousStep}>&gt;</span> */}
//             </div>
//             <h2 className="step-title">ุฅูุดุงุก ูููุฉ ูุฑูุฑ</h2>
//             <div className="input-group password-group">
//               <label htmlFor="password" className="input-label">ูููุฉ ุงููุฑูุฑ</label>
//               <div className="password-input-wrapper">
//                 <input
//                   id="password"
//                   type={showPassword ? "text" : "password"}
//                   placeholder="ูููุฉ ุงููุฑูุฑ"
//                   value={password}
//                   onChange={(e) => setPassword(e.target.value)}
//                   className="signup-input"
//                 />
//                 <span className="password-toggle" onClick={() => setShowPassword(!showPassword)}>
//                   {showPassword ? '๐๏ธ' : '๐ซ'} {/* ุฃููููุฉ ุงูุนูู ุฃู ุงูุฎุท ุงููุงุฆู */}
//                 </span>
//               </div>
//               <p className="password-requirements">ูุฌุจ ุฃู ุชุชุถูู ูููุฉ ูุฑูุฑู ูุง ููู ุนูู ุงูุฃูู:</p>
//               <ul>
//                 <li className={password.length > 0 && /[a-zA-Z]/.test(password) ? 'valid' : ''}>
//                   {password.length > 0 && /[a-zA-Z]/.test(password) ? 'โ' : 'โข'} ุญุฑููุง ูุงุญุฏูุง
//                 </li>
//                 <li className={password.length > 0 && (/[0-9]/.test(password) || /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]/.test(password)) ? 'valid' : ''}>
//                   {password.length > 0 && (/[0-9]/.test(password) || /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]/.test(password)) ? 'โ' : 'โข'} ุฑูู ูุงุญุฏ ุฃู ุญุฑู ุฎุงุต (ูุซุงู: #? !&)
//                 </li>
//                 <li className={password.length >= 10 ? 'valid' : ''}>
//                   {password.length >= 10 ? 'โ' : 'โข'} 10 ุฃุญุฑู
//                 </li>
//               </ul>
//             </div>
//             <button
//               className="signup-button primary-button"
//               onClick={handleNextStep}
//               disabled={!(password.length >= 10 && /[a-zA-Z]/.test(password) && (/[0-9]/.test(password) || /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]/.test(password)))}
//             >
//               ุงูุชุงูู
//             </button>
//           </div>
//         );

//       case 2:
//         const months = Array.from({ length: 12 }, (_, i) => new Date(0, i).toLocaleString('ar', { month: 'long' }));
//         const currentYear = new Date().getFullYear();
//         const years = Array.from({ length: 100 }, (_, i) => currentYear - i); // 100 ุณูุฉ ููุฎูู

//         return (
//           <div className="signup-step-container">
//             <div className="step-header">
//               <div className="progress-bar">
//                 <div className="progress-fill" style={{ width: '66%' }}></div>
//               </div>
//               <p className="step-indicator">ุงูุฎุทูุฉ 2 ูู 3</p>
//               {/* <span className="arrow-icon" onClick={handlePreviousStep}>&gt;</span> */}
//             </div>
//             <h2 className="step-title">ุนุฑูููุง ุนู ููุณู</h2>
//             <div className="input-group">
//               <label htmlFor="name" className="input-label">ุงูุงุณู</label>
//               <input
//                 id="name"
//                 type="text"
//                 placeholder="ุงุณูู"
//                 value={name}
//                 onChange={(e) => setName(e.target.value)}
//                 className="signup-input"
//               />
//               <p className="input-hint">ุณูุธูุฑ ูุฐุง ุงูุงุณู ูู ุตูุญุชู ุงูุดุฎุตูุฉ</p>
//             </div>
//             <div className="input-group">
//               <label htmlFor="dob" className="input-label">ุชุงุฑูุฎ ุงููููุงุฏ</label>
//               <p className="input-hint">ููุงุฐุง ูุญุชุงุฌ ุฅูู ูุนุฑูุฉ ุชุงุฑูุฎ ูููุงุฏูุ <a href="#" className="learn-more">ูุนุฑูุฉ ุงููุฒูุฏ</a></p>
//               <div className="date-input-group">
//                 <input
//                   type="text"
//                   placeholder="ุงูููู"
//                   value={day}
//                   onChange={(e) => setDay(e.target.value.replace(/[^0-9]/g, ''))} // ููุท ุฃุฑูุงู
//                   className="date-input day-input"
//                   maxLength={2}
//                 />
//                 <select
//                   value={month}
//                   onChange={(e) => setMonth(e.target.value)}
//                   className="date-input month-input"
//                 >
//                   <option value="">ุงูุดูุฑ</option>
//                   {months.map((m, index) => (
//                     <option key={index + 1} value={index + 1}>{m}</option>
//                   ))}
//                 </select>
//                 <select
//                   value={year}
//                   onChange={(e) => setYear(e.target.value)}
//                   className="date-input year-input"
//                 >
//                   <option value="">ุงูุนุงู</option>
//                   {years.map((y) => (
//                     <option key={y} value={y}>{y}</option>
//                   ))}
//                 </select>
//               </div>
//             </div>
//             <div className="input-group">
//               <label className="input-label">ุงูููุน</label>
//               <p className="input-hint">ูุณุชุฎุฏู ููุนู ุงูุงุฌุชูุงุนู ูููุณุงุนุฏุฉ ูู ุชุฎุตูุต ุงูุชุฑุงุญุงุช ุงููุญุชูู ูุงูุฅุนูุงูุงุช ุงูุชู ุชุธูุฑ ูู.</p>
//               <div className="radio-group">
//                 <label className="radio-label">
//                   <input
//                     type="radio"
//                     name="gender"
//                     value="female"
//                     checked={gender === "female"}
//                     onChange={(e) => setGender(e.target.value)}
//                   />
//                   <span>ุงูุฑุฃุฉ</span>
//                 </label>
//                 <label className="radio-label">
//                   <input
//                     type="radio"
//                     name="gender"
//                     value="male"
//                     checked={gender === "male"}
//                     onChange={(e) => setGender(e.target.value)}
//                   />
//                   <span>ุฑุฌู</span>
//                 </label>
//                 <label className="radio-label">
//                   <input
//                     type="radio"
//                     name="gender"
//                     value="prefer_not_to_say"
//                     checked={gender === "prefer_not_to_say"}
//                     onChange={(e) => setGender(e.target.value)}
//                   />
//                   <span>ุฃูุถู ุนุฏู ุงูุฅุฌุงุจุฉ</span>
//                 </label>
//               </div>
//             </div>
//             <button
//               className="signup-button primary-button"
//               onClick={handleNextStep}
//               // ููููู ุฅุถุงูุฉ ุดุฑูุท ููุชุญูู ูู ููุก ุงูุญููู ุงููุทููุจุฉ ูุจู ุงูุงูุชูุงู ููุฎุทูุฉ ุงูุชุงููุฉ
//             >
//               ุงูุชุงูู
//             </button>
//           </div>
//         );

//       case 3:
//         return (
//           <div className="signup-step-container">
//             <div className="step-header">
//               <div className="progress-bar">
//                 <div className="progress-fill" style={{ width: '100%' }}></div>
//               </div>
//               <p className="step-indicator">ุงูุฎุทูุฉ 3 ูู 3</p>
//               {/* <span className="arrow-icon" onClick={handlePreviousStep}>&gt;</span> */}
//             </div>
//             <h2 className="step-title">ุงูุดุฑูุท ูุงูุฃุญูุงู</h2>
//             <div className="checkbox-group">
//               <label className="checkbox-label">
//                 <input type="checkbox" />
//                 <span>ูุง ุฃุฑุบุจ ูู ุชููู ุงูุฑุณุงุฆู ุงูุชุณููููุฉ ูู Spotify</span>
//               </label>
//               <label className="checkbox-label">
//                 <input type="checkbox" />
//                 <span>ุฃุณูุญ ุจูุดุงุฑูุฉ ุจูุงูุงุช ุงูุชุณุฌูู ุงูุฎุงุตุฉ ุจู ูุน ูููุฑู ูุญุชูู Spotify ูุฃุบุฑุงุถ ุงูุชุณููู.</span>
//               </label>
//             </div>
//             <p className="terms-text">
//               ุจุนุฏ ุงูููุฑ ุนูู ุฒุฑ ุงูุชุณุฌูู ุงูุงุดุชุฑุงู ููุงููุฉ ููู ุนูู <a href="#" className="link">ุดุฑูุท ุงูุงุณุชุฎุฏุงู ูุงูุฃุญูุงู</a> ูุฏู Spotify.
//               ููุนุฑูุฉ ุงููุฒูุฏ ุนู ููููุฉ ุฌูุน Spotify ูุจูุงูุงุชู ุงูุดุฎุตูุฉ ูุงุณุชุฎุฏุงููุง ูุญูุงูุชูุงุ ูุฑุฌู ุงูุงุทูุงุน ุนูู <a href="#" className="link">ุณูุงุณุฉ ุงูุฎุตูุตูุฉ</a> ูุฏู Spotify.
//             </p>
//             <button
//               className="signup-button primary-button"
//               onClick={handleSignup}
//               disabled={loading}
//             >
//               {loading ? "ุฌุงุฑู ุงูุชุณุฌูู..." : "ุณุฌูู"}
//             </button>
//             {error && <p className="error-message">{error}</p>}
//             <p className="reCAPTCHA-info">
//                 This site is protected by reCAPTCHA and the Google <a href="https://policies.google.com/privacy" className="reCAPTCHA-link">Privacy Policy</a> and <a href="https://policies.google.com/terms" className="reCAPTCHA-link">Terms of Service</a> apply.
//             </p>
//           </div>
//         );

//       default:
//         return null;
//     }
//   };

//   return (
//     <div className="signup-page-wrapper">
//       <SpotifyLogo />
//       {renderCurrentStep()}
//     </div>
//   );
// };

// export default SignupPage;